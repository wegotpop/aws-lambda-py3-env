#/bin/bash
BASH_ENV_VARIABLE='PROCESS_PHASE';

PYTHON_VER_MAIN='3';
PYTHON_VER_SUB='6';
PYTHON_VER_REV='1';
PYTHON_VER="$PYTHON_VER_MAIN.$PYTHON_VER_SUB.$PYTHON_VER_REV";
PYTHON_SOURCE_DIR="Python-$PYTHON_VER";
PYTHON_SOURCE_URL="https://www.python.org/ftp/python";
PYTHON_STATIC_LIBRARY=libpython$PYTHON_VER_MAIN.${PYTHON_VER_SUB}m.a;

POP_PYTHON_OUT='pop_python3';
POP_PYTHON_DIR='pop-python3';
POP_PYTHON_SRC="$POP_PYTHON_DIR/$POP_PYTHON_OUT.c";

DOCKER_FILE_NAME='Dockerfile';
DOCKER_WORKING_DIR='/pop';
DOCKER_IMAGE_NAME='amazonlinux';
DOCKER_PYTHON_IMAGE_NAME="$DOCKER_IMAGE_NAME-python3:$PYTHON_VER";
DOCKER_PYTHON_CONTAINER_NAME="$DOCKER_IMAGE_NAME-python3-container";

PROJECT_BUILD_DIR='build'
PROJECT_LOCAL_DIR="$PROJECT_BUILD_DIR/local";
PROJECT_REMOTE_DIR="$PROJECT_BUILD_DIR/remote";
PROJECT_ARCHIVE='lambda.zip';
PROJECT_SOURCES='src';
PROJECT_ENTRY_NAME='lambda_function';
PROJECT_ENTRY_POINT="$PROJECT_ENTRY_NAME.so"

if [ -n "${!BASH_ENV_VARIABLE}" ];
then
    PYTHON_2_VER_MAIN="$(python -c 'import sys; print sys.version_info.major')";
    PYTHON_2_VER_SUB="$(python -c 'import sys; print sys.version_info.minor')";
    PYTHON_2_VER_REV="$(python -c 'import sys; print sys.version_info.micro')";
    PYTHON_2_VER="$PYTHON_2_VER_MAIN.$PYTHON_2_VER_SUB.$PYTHON_2_VER_REV";
    PYTHON_2_SOURCE_DIR="Python-$PYTHON_2_VER";
    PYTHON_2_SOURCE_URL="$PYTHON_SOURCE_URL";
fi;
